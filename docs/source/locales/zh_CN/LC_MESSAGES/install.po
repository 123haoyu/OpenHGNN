# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, GAMMA LAB
# This file is distributed under the same license as the OpenHGNN package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenHGNN \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../install/index.rst:2
msgid "Install and Setup"
msgstr "安装和配置"

#: ../../install/index.rst:5
msgid "System requirements"
msgstr "系统要求"

#: ../../install/index.rst:6
msgid "OpenHGNN works with the following operating systems:"
msgstr "OpenHGNN可以在下列操作系统中使用"

#: ../../install/index.rst:8
msgid "Ubuntu 16.04"
msgstr ""

#: ../../install/index.rst:9
msgid "macOS X"
msgstr ""

#: ../../install/index.rst:10
msgid "Windows 10"
msgstr ""

#: ../../install/index.rst:12
msgid "OpenHGNN requires Python version 3.6, 3.7, 3.8, or 3.9."
msgstr "OpenHGNN要求Python version 3.6, 3.7, 3.8, or 3.9."

#: ../../install/index.rst:15
msgid "Install"
msgstr ""

#: ../../install/index.rst:17
msgid "Python environment requirments"
msgstr ""

#: ../../install/index.rst:19
msgid "`Python <https://www.python.org/>`_ >= 3.6"
msgstr ""

#: ../../install/index.rst:20
msgid "`PyTorch <https://pytorch.org/get-started/locally/>`_  >= 1.7.1"
msgstr ""

#: ../../install/index.rst:21
msgid "`DGL <https://github.com/dmlc/dgl>`_ >= 0.7.0"
msgstr ""

#: ../../install/index.rst:24
msgid ""
"**1. Python environment (Optional):** We recommend using Conda package "
"manager"
msgstr ""

#: ../../install/index.rst:32
msgid ""
"**2. Pytorch:** Install `PyTorch <https://pytorch.org/>`_. We have "
"verified GraphGym under PyTorch 1.8.0. For example:"
msgstr ""

#: ../../install/index.rst:40
msgid ""
"**3. DGL:** Install `DGL <https://github.com/dmlc/dgl>`_, follow their "
"instructions. For example:"
msgstr ""

#: ../../install/index.rst:48
msgid "**4. OpenHGNN and other dependencies:**"
msgstr ""

#: ../../install/usage.rst:2
msgid "Basic Usage"
msgstr ""

#: ../../install/usage.rst:5
msgid "Run experiments"
msgstr ""

#: ../../install/usage.rst:6
msgid ""
"Running an existing baseline model on an existing benchmark :ref:`task "
"<api_dataset>`"
msgstr ""

#: ../../install/usage.rst:14
msgid "Optional arguments are as follows:"
msgstr ""

#: ../../install/usage.rst:16
msgid ""
"``--model MODEL``, ``-m MODEL`` name of models.  Please refer to the "
"`model list <https://github.com/BUPT-GAMMA/OpenHGNN#models>`_ for "
"supported models and their names."
msgstr ""

#: ../../install/usage.rst:17
msgid ""
"``--task TASK``, ``-t TASK`` name of task.  Please refer to `tasks "
"<https://github.com/BUPT-"
"GAMMA/OpenHGNN/tree/main/openhgnn/tasks#Supported task>`_  for the list "
"of tasks."
msgstr ""

#: ../../install/usage.rst:18
msgid ""
"``--dataset DATASET``, ``-d DATASET`` name of datasets.  Please refer to "
"`datasets <https://github.com/BUPT-"
"GAMMA/OpenHGNN/tree/main/openhgnn/dataset#Dataset>`_ for the list of "
"datasets."
msgstr ""

#: ../../install/usage.rst:19
msgid ""
"``--gpu GPU``, ``-g GPU`` controls which GPU you will use. If you do not "
"have GPU, set ``-g -1``."
msgstr "``--gpu GPU``, ``-g GPU`` controls which GPU you will use. If you do not "
"have GPU, set ``-g -1``."

#: ../../install/usage.rst:20
msgid ""
"``--use_best_config`` use the best config OpenHGNN has found in the "
"dataset with the model. If you want to set the different hyper-parameter,"
" modify the `config.ini <https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/config.ini>`_ file manually."
msgstr ""

#: ../../install/usage.rst:21
msgid "``--use_hpo`` use hyper-parameter optimization from optuna."
msgstr "``--use_hpo`` use hyper-parameter optimization from optuna."

#: ../../install/usage.rst:23
msgid "e.g.:"
msgstr "例如:"

#: ../../install/usage.rst:30
msgid "Hyper-parameter optimization"
msgstr ""

#: ../../install/usage.rst:31
msgid "Running an experiment with optuna"
msgstr ""

#: ../../install/usage.rst:37
msgid "OpenHGNN will determine hyperparameters in the following order:"
msgstr ""

#: ../../install/usage.rst:39
msgid ""
"If ``--use_hpo`` is enabled, search for the best hyperparameter by "
"optuna. This is controlled by :func:`func_search` in "
"``./openhgnn/auto/hpo.py``. Please refer `here <https://github.com/BUPT-"
"GAMMA/OpenHGNN/tree/main/openhgnn/auto>`_ for more details."
msgstr ""

#: ../../install/usage.rst:40
msgid ""
"Otherwise, if ``--use_best_config`` is enabled, load the best "
"hyperparameters built within OpenHGNN. The configurations are in "
"``./openhgnn/utils/best_config.py``."
msgstr ""

#: ../../install/usage.rst:41
msgid "Otherwise, load the hyperparameters in ``./openhgnn/config.ini``."
msgstr ""

#: ../../install/usage.rst:44
msgid "Evaluate a new dataset"
msgstr ""

#: ../../install/usage.rst:45
msgid ""
"You can specify your dataset if necessary. In this section we use HGBn-"
"ACM as an example for the node classification dataset."
msgstr ""

#: ../../install/usage.rst:48
msgid "How to build a new dataset"
msgstr ""

#: ../../install/usage.rst:50
msgid "**First step: Process dataset**"
msgstr ""

#: ../../install/usage.rst:52
msgid ""
"We give a `demo <https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/debug/HGBn-ACM2dgl.py>`_ to process the"
" HGBn-ACM, which is a node classification dataset."
msgstr ""

#: ../../install/usage.rst:55
msgid ""
"First, download the HGBn-ACM from the `Link "
"<https://www.biendata.xyz/hgb/#/datasets>`_. After that, we process it as"
" a `dgl.heterograph <https://docs.dgl.ai/en/latest/guide/graph-"
"heterogeneous.html#guide-graph-heterogeneous>`_."
msgstr ""

#: ../../install/usage.rst:58
msgid ""
"The following code snippet is an example of creating a heterogeneous "
"graph in DGL."
msgstr ""

#: ../../install/usage.rst:81
msgid "We recommend to set the feature name as ``'h'``."
msgstr ""

#: ../../install/usage.rst:87
msgid ""
"DGL provides :func:`dgl.save_graphs` and :func:`dgl.load_graphs` "
"respectively for saving and loading heterogeneous graphs in binary "
"format. So we can use `dgl.save_graphs "
"<https://docs.dgl.ai/en/latest/generated/dgl.save_graphs.html#>`_ to "
"store graphs into the disk."
msgstr ""

#: ../../install/usage.rst:95
msgid "**Second step: Add extra information**"
msgstr ""

#: ../../install/usage.rst:97
msgid ""
"We can get a binary file named *demo_graph.bin* after the first step, and"
" we should move it into the directory *openhgnn/dataset/*. The next step "
"is to specify information in the `NodeClassificationDataset.py "
"<https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/dataset/NodeClassificationDataset.py#L145>`_"
msgstr ""

#: ../../install/usage.rst:100
msgid ""
"For example, we should set the *category*, *num_classes* and "
"*multi_label* (if necessary) with ``\"paper\"``, ``3``, ``True``, "
"representing the node type to predict classes for, the number of classes,"
" and whether the task is multi-label classification respectively. Please "
"refer to :ref:`Base Node Classification Dataset <api-base-node-dataset>` "
"for more details."
msgstr ""

#: ../../install/usage.rst:114
msgid "**Third step: optional**"
msgstr ""

#: ../../install/usage.rst:116
msgid ""
"We can use ``demo_graph`` as our dataset name to evaluate an existing "
"model."
msgstr ""

#: ../../install/usage.rst:122
msgid ""
"If you have another dataset name, you should also modify the "
"`build_dataset <https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/dataset/__init__.py>`_."
msgstr ""

#: ../../install/usage.rst:125
msgid "Apply a new model"
msgstr ""

#: ../../install/usage.rst:126
msgid ""
"In this section, we will create a model named RGAT, which is not in our "
"`models package <api-model>`."
msgstr ""

#: ../../install/usage.rst:130
msgid "How to build a new model"
msgstr ""

#: ../../install/usage.rst:131
msgid "**First step: Register model**"
msgstr ""

#: ../../install/usage.rst:133
msgid ""
"We should create a class ``RGAT`` that inherits the :ref:`Base Model "
"<api-model>` and register the model with ``@register_model(str)``."
msgstr ""

#: ../../install/usage.rst:143
msgid "**Second step: Implement functions**"
msgstr ""

#: ../../install/usage.rst:145
msgid ""
"We must implement the class method ``build_model_from_args``, other "
"functions like ``__init__``, ``forward``, etc."
msgstr ""

#: ../../install/usage.rst:181
msgid ""
"Here we do not give the implementation details of ``RGATLayer``. For more"
" reading, check out: `RGATLayer <https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/models/RGAT.py>`_."
msgstr ""

#: ../../install/usage.rst:186
msgid ""
"In OpenHGNN, we preprocess the features of the dataset outside of the "
"model. Specifically, we use a linear layer with bias for each node type "
"to map all node features to a shared feature space. So the parameter "
"``h_dict`` of ``forward`` in the model are not original features, and "
"your model does not need feature preprocessing."
msgstr ""

#: ../../install/usage.rst:190
msgid "**Third step: Add to supported models dictionary**"
msgstr ""

#: ../../install/usage.rst:192
msgid ""
"We should add a new entry to ``SUPPORTED_MODELS`` in `models/init.py "
"<https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/models/__init__.py>`_"
msgstr ""

#: ../../install/usage.rst:195
msgid "Apply to a new scenario"
msgstr ""

#: ../../install/usage.rst:196
msgid ""
"In this section, we will apply to a recommendation scenario, which "
"involves building a new task and trainerflow."
msgstr ""

#: ../../install/usage.rst:199
msgid "How to build a new task"
msgstr ""

#: ../../install/usage.rst:200
msgid "**First step: Register task**"
msgstr ""

#: ../../install/usage.rst:202
msgid ""
"We should create a class ``Recommendation`` that inherits the "
":ref:`BaseTask <api-task>` and register it with ``@register_task(str)``."
msgstr ""

#: ../../install/usage.rst:212 ../../install/usage.rst:253
msgid "**Second step: Implement methods**"
msgstr ""

#: ../../install/usage.rst:214
msgid ""
"We should implement the methods involved with evaluation metrics and loss"
" functions."
msgstr ""

#: ../../install/usage.rst:235 ../../install/usage.rst:289
msgid "**Finally**"
msgstr ""

#: ../../install/usage.rst:237
msgid ""
"We should add a new entry to ``SUPPORTED_TASKS`` in `task/init.py "
"<https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/tasks/__init__.py>`_"
msgstr ""

#: ../../install/usage.rst:240
msgid "How to build a new trainerflow"
msgstr ""

#: ../../install/usage.rst:241
msgid "**First step: Register trainerflow**"
msgstr ""

#: ../../install/usage.rst:243
msgid ""
"We should create a class that inherits the :ref:`BaseFlow <api-"
"trainerflow>` and register the trainerflow with "
"``@register_trainer(str)``."
msgstr ""

#: ../../install/usage.rst:255
msgid ""
"We declared the function ``train()`` as an abstract method.  So the "
"train() must be overridden, or the trainerflow cannot be instantiated.  "
"The following gives an example of the training loop."
msgstr ""

#: ../../install/usage.rst:291
msgid ""
"We should add a new entry to ``SUPPORTED_FLOWS`` in `trainerflow/init.py "
"<https://github.com/BUPT-"
"GAMMA/OpenHGNN/blob/main/openhgnn/trainerflow/__init__.py>`_"
msgstr ""

